#include <iostream>
#include <fstream>

using namespace std;

// PROTOTYPES
void AddNewProperty(int ID[], int bedrooms[], int price[], int &count);
void PriceReduction(int ID[], int price[], int count);
void SearchProps(int ID[], int bedrooms[], int price[], int count);
void Report(int reportID[], int reportbedrooms[], int reportprice[], int reportcount);
void SaveToFile(int reportID[], int reportbedrooms[], int reportprice[], int reportcount);
void ReadFromFile(int reportID[], int reportbedrooms[], int reportprice[], int &reportcount);

int main()
{
	int ID[1000];
	int bedrooms[1000];
	int price[1000];
	int count = 0;

	ReadFromFile(ID, bedrooms, price, count);

	int choice = 1;
	while (choice != 0)
	{
		cout << "1- New Property" << endl;
		cout << "2- Price Reduction" << endl;
		cout << "3- Search Property" << endl;
		cout << "4- Report" << endl;
		cout << "0- Exit" << endl;
		cout << "Your choice: ";
		cin >> choice;

		if (choice == 1)
		{
			AddNewProperty(ID, bedrooms, price, count);
		}
		else if (choice == 2)
		{
			PriceReduction(ID, price, count);
		}
		else if (choice == 3)
		{
			SearchProps(ID, bedrooms, price, count);
		}
		else if (choice == 4)
		{
			Report(ID, bedrooms, price, count);
		}
	}

	SaveToFile(ID, bedrooms, price, count);

	system("PAUSE");
	return 0;
}

void AddNewProperty(int ID[], int bedrooms[], int price[], int &count)
{
	int propID;
	cout << "Prop ID: ";
	cin >> propID;

	int propBeds;
	cout << "# of Beds: ";
	cin >> propBeds;

	int propPrice;
	cout << "Price: ";
	cin >> propPrice;

	bool foundPropID = false;
	for (int i = 0; i < count; i++)
	{
		if (ID[i] == propID)
		{
			foundPropID = true;
			break;
		}
	}

	if (foundPropID == true)
	{
		cout << "Already a property with that ID." << endl;
	}
	else
	{
		ID[count] = propID;
		bedrooms[count] = propBeds;
		price[count] = propPrice;
		count++;
	}
}

void PriceReduction(int ID[], int price[], int count)
{
	int propID;
	cout << "Prop ID: ";
	cin >> propID;

	int propPriceRed;
	cout << "Price: ";
	cin >> propPriceRed;

	bool foundPropID = false;

	for (int i = 0; i < count; i++)
	{
		if (ID[i] == propID)
		{
			price[i] -= propPriceRed;
			cout << "Price reduced." << endl;
			foundPropID = true;
			break;
		}
	}

	if (foundPropID == false)
	{
		cout << "No Property with that ID exist." << endl;
	}
}

void SearchProps(int ID[], int bedrooms[], int price[], int count)
{
	int propPriceMax;
	cout << "Max. Price: ";
	cin >> propPriceMax;

	int propBedsMin;
	cout << "Min. # of Beds: ";
	cin >> propBedsMin;

	int foundCount = 0;
	for (int i = 0; i < count; i++)
	{
		if (price[i] <= propPriceMax && bedrooms[i] >= propBedsMin)
		{
			cout << ID[i] << " - " << bedrooms[i] << " bedroom at $" << price[i] << endl;
			foundCount++;
		}
	}

	if (foundCount == 0)
	{
		cout << "No Property matched." << endl;
	}
}

void Report(int reportID[], int reportbedrooms[], int reportprice[], int reportcount)
{
	int sum = 0;

	for (int i = 0; i < reportcount; i++)
	{
		cout << reportID[i] << " - " << reportbedrooms[i] << " bedroom at $" << reportprice[i] << endl;
		sum += reportprice[i];
	}

	cout << "Average is " << sum / reportcount << "." << endl;
}

void ReadFromFile(int reportID[], int reportbedrooms[], int reportprice[], int &reportcount)
{
	ifstream file("myfile.txt");
	
	while (!file.eof())
	{
		file >> reportID[reportcount];
		file >> reportbedrooms[reportcount];
		file >> reportprice[reportcount];
		reportcount++;
	}

	file.close();
}

void SaveToFile(int reportID[], int reportbedrooms[], int reportprice[], int reportcount)
{
	ofstream file("myfile.txt");
	for (int i = 0; i < reportcount; i++)
	{
		file << reportID[i] << " " << reportbedrooms[i] << " " << reportprice[i];
		if (i < reportcount - 1)
		{
			file << endl;
		}
	}

	cout << "File saved." << endl;
	file.close();
}
