Other Development Environments
	Visual Studio (the one we use)
		.NET languages VB.NET, C#, C++
	XCode (on Mac Computers) 
	Eclipse (Java)
	Netbeans (Java)
	VS Code (JavaScript)
	
Source Code -> Compiler -> Machine Code

Required to use Visual Studio  during Exams

All assignments are under Assignment section. 

Assignments prefixed with "A" (ex. A1, A2 ...) needs to be completed and submitted by due date. 

Assignments prefixed with "E" (ex. E1, E2 ...) need not be submitted. They are not graded. Those are for you to exersice. 

Assignments prefixed with "L" (ex L1, L2...) needs to be completed and submitted in class during the lab session. Cannot be completed remotely -- cannot be completed before or after class. 

NO LATE ASSIGNMENTS ACCEPTED. 

ON Visual Studio
	Solutions
	Projects
	Source Code Files

C++ Empty Project on Visual studio 2017 environment. 

C++ is an extension of C.


INPUT > PROCESSING > OUTPUT

10101010 - byte
10101010101010101010101010101010 - 4 bytes


DATA - 	Variables (little boxes in the memory)
		Variable data type
			int (a whole number) (4 bytes long)
			double (a number decimals) (8 bytes)
			bool (a yes/no, true/false) (1 byte)
			char

 (a single character) (ASCII 1 byte, Unicode - 2 bytes)
			string (a series of characters, Text)
			
STATEMENTS (THAT OPERATE ON THAT DATA)

0 - 0
1 - 1

00 - 0
01 - 1
10 - 2
11 - 3

2 ^ bits


namespaces: in standard namespace. 


include <stdafx.h> for the assignment. 

1- Comments -- text just for you and other programmers, completely ignored by the compiler. 

2- Indentations -- making your code beautiful. 


Grade Calculator
=================

Compute the average of 3 grades. 

INPUT >> PROCESSING >> OUTPUT

data 3 pieces of data (grades). 
data average grade (1 piece of data)

variables have 
	1- data type, 
	2- name, 
	3- optionally intial value. 
	
int grade1; // garbage in it. 
grade1 = 10;


int grade1 = 0;
squareGrade1 = grade1 * grade1

DEBUGGING: a very important concept. a way of going through program execution step by step. 

precedence of operation. 
lowest: +, - 
higher: /, *
even higher: negation (-), exponent, mod (%)

DECISION STATEMENTS:
Allowing you to execute code based on certain criteria. 

if (critera)
{
	// only execute if criteria is true
}

a = b

logical operators a, b, c

a > b
a >= b
a < b
a <= b
a == b VERY IMPORTANT DOUBLE EQUAL INSIDE IF STATEMENTS
a != b

&& AND
|| OR

(a <= b && a < c)


DECISION STATEMENT:

if statement
	one way (only true part)
	two way if statement (true and false part)
	multi-way if statement (multiple criteria with an optional false part)


VARIABLES: data types, how to declare, how to initialize. 

ASSIGNMENTS: putting data inside variables and math expressions.  

CIN, COUT: ability to read data off of keyboard or put information on screen. 

DECISIONS: if statements. logical expression. 

REPITITIONS: loops, for loop, while loop. 


SCOPE OF VARIABLES: where you declare the variable is very important. A variable belongs to the scope (the curly brackets) in which it is declared. outside scope can NOT see the variable but sub scopes can. 













	


	
	
	





























	































	


	